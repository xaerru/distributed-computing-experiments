version: '3.8'

services:
  # Canonical Server
  canonical-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: canonical-server
    hostname: canonical-server
    ports:
      - "9000:9000"
    networks:
      - distributed-net
    restart: unless-stopped

  # Edge Server 0 (node_id=0, port 8001)
  edge-server-0:
    build:
      context: ./edge_server
      dockerfile: Dockerfile
    container_name: edge-server-0
    hostname: edge-server-0
    ports:
      - "8001:8001"
    networks:
      - distributed-net
    command: ["python", "server.py", "0"]
    depends_on:
      - canonical-server
    restart: unless-stopped

  # Edge Server 1 (node_id=1, port 8002)
  edge-server-1:
    build:
      context: ./edge_server
      dockerfile: Dockerfile
    container_name: edge-server-1
    hostname: edge-server-1
    ports:
      - "8002:8002"
    networks:
      - distributed-net
    command: ["python", "server.py", "1"]
    depends_on:
      - canonical-server
    restart: unless-stopped

  # Edge Server 2 (node_id=2, port 8003)
  edge-server-2:
    build:
      context: ./edge_server
      dockerfile: Dockerfile
    container_name: edge-server-2
    hostname: edge-server-2
    ports:
      - "8003:8003"
    networks:
      - distributed-net
    command: ["python", "server.py", "2"]
    depends_on:
      - canonical-server
    restart: unless-stopped

  # Client (for testing) - Optional, can be run separately
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    hostname: client
    networks:
      - distributed-net
    depends_on:
      - edge-server-0
      - edge-server-1
      - edge-server-2
    tty: true
    stdin_open: true
    volumes:
      - ./client:/app/output  # Mount volume for downloaded files
    restart: "no"
    profiles:
      - client  # Optional profile, use: docker-compose --profile client up

networks:
  distributed-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16